<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chuck</title>
    <description>Chuck's blog,use Jekyll and github pages.</description>
    <link>http://localhost:4000//</link>
    <atom:link href="http://localhost:4000//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 14 Dec 2016 15:15:27 +0800</pubDate>
    <lastBuildDate>Wed, 14 Dec 2016 15:15:27 +0800</lastBuildDate>
    <generator>Jekyll v3.3.1</generator>
    
      <item>
        <title>Macbook Pro下载并编译Android源码并导入Android Studio</title>
        <description>&lt;p&gt;　　最近尝试下载并编译Android的源码，过程比较曲折，所以特别的记录一下。&lt;/p&gt;

&lt;p&gt;　　&lt;strong&gt;环境&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;　　mac系统：OS X EI Captian 10.11.6&lt;/p&gt;

&lt;p&gt;　　Android源码：Android 7.0&lt;/p&gt;

&lt;p&gt;　　JDK: jdk 1.8.0_77&lt;/p&gt;

&lt;p&gt;　　
　　&lt;strong&gt;下载源码&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;　　step1：因为我的mac硬盘空间比较小，所以我直接在移动硬盘上操作的，如果mac的空间够大也可以在内置硬盘操作。由于mac文件系统模式默认是不区分大小写的，但是AOSP托管在git上是区分大小写的，所以这里我们需要创建一个镜像。具体操作如下：&lt;/p&gt;

&lt;p&gt;　　方法一：使用命令行（AOSP目前比较大，建议至少预留80G+的空间）：
　　&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;hdiutil create -type SPARSE -fs 'Case-sensitive Journaled HFS+' -size 80g /Volumes/aosp/android.dmg
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;　　生成镜像的位置是可以自己定义的，我这里是放在了移动硬盘中。如果需要更大的磁盘空间，可以用下面的命令行来改变磁盘镜像的大小：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;hdiutil resize -size &amp;lt;new-size-you-want&amp;gt;g /Volumes/aosp/android.dmg
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;　　方法二：使用mac自带的磁盘工具，选择New Image，分配至少80G大小的空间；保证选择格式为OSX 扩展&lt;strong&gt;（区分大小写，日志式）&lt;/strong&gt;的卷。一定要选区分大小写,日志式&lt;/p&gt;

&lt;p&gt;　　 &lt;img src=&quot;http://img.blog.csdn.net/20161121201509580&quot; width=&quot;300&quot; /&gt;&lt;/p&gt;

&lt;p&gt;　　这时在/Volumes/aosp/下会生成一个android.dmg的镜像，双击这个镜像，将其挂载。这样在mac Finder中就可以看到我们刚刚的创建的镜像了。&lt;/p&gt;

&lt;p&gt;　　Step2  Mac 系统下默认只能同时打开 1024 个文件，而在进行 Android 源码编译时有可能会超出这个限制，因此需要解除这个限制。在~/.bash_profile中添加以下内容：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# set the number of open files to be 1024
ulimit -S -n 1024
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;　　Step3 安装repo及同步AOSP源码
　　&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir ~/bin
PATH=~/bin:$PATH
curl https://storage.googleapis.com/git-repo-downloads/repo &amp;gt; ~/bin/repo
chmod a+x ~/bin/repo
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;　　由于众所周知的原因，我们如果直接使用官方下载会非常的困难，那么我们可以考虑使用国内的源，比较好用的就是&lt;a href=&quot;https://mirrors.tuna.tsinghua.edu.cn/help/AOSP/&quot;&gt;清华镜像&lt;/a&gt;。按照清华源的步骤去同步就可以了：
　　&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd  /Volumes/aosp/ #将当前路径切换到刚刚挂载的的镜像中
wget https://mirrors.tuna.tsinghua.edu.cn/aosp-monthly/aosp-latest.tar # 下载初始化包
tar xf aosp-latest.tar
cd AOSP
repo sync # 正常同步一遍即可得到完整目录
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;　　如果repo没有配置环境变量，那么需要把repo的绝对路径加上，例如刚刚把repo下载到~/bin下了，那么在同步时应该是~/bin/repo sync。安静的等待源码下载同步完成。&lt;/p&gt;

&lt;p&gt;　　&lt;strong&gt;编译源码&lt;/strong&gt;
　　step1 在源码的当前路径下：
　　&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ source build/envsetup.sh 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;　　如果不出意外会得到以下结果：&lt;/p&gt;

&lt;p&gt;　　&lt;img src=&quot;http://img.blog.csdn.net/20161121213314365&quot; width=&quot;300&quot; /&gt;&lt;/p&gt;

&lt;p&gt;　　step2：接下来就是根据设备选择target&lt;/p&gt;

&lt;p&gt;　　&lt;img src=&quot;http://img.blog.csdn.net/20161121214646434&quot; width=&quot;200&quot; height=&quot;100&quot; /&gt;&lt;/p&gt;

&lt;p&gt;　     我这里选择的是5 aosp_x86-eng。每个选项对应的device可以在这里&lt;a href=&quot;https://source.android.com/source/running.html#selecting-device-build&quot;&gt;查看&lt;/a&gt; 如果打不开，我截了张图，大家可以根据自己的情况选择&lt;/p&gt;

&lt;p&gt;　　 &lt;img src=&quot;http://img.blog.csdn.net/20161121215609641&quot; width=&quot;400&quot; height=&quot;300&quot; /&gt;&lt;/p&gt;

&lt;p&gt;　     选择好target后就可以直接进行编译了
　     不过在这之前你可能还需要&lt;a href=&quot;https://developers.google.com/android/drivers&quot;&gt;下载驱动&lt;/a&gt;（如果只是想查看源码也可以忽略该步）
将下载下来的文件解压到源码的根目录会得到三个.sh的文件，依次运行三个文件，例如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ./extract-broadcom-hammerhead.sh

The license for this software will now be displayed.
You must agree to this license before using this software.

Press Enter to view the licensels
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;回车后查看license，翻到license最后，输入I ACCEPT后回车，这时会将驱动文件释放到vendor目录。&lt;/p&gt;

&lt;p&gt;　     step3：
　&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ make -j8
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;　　使用make构建，该命令可以通过使用-jN参数来处理并行任务。此处的N，根据所用的计算机的硬件的核数来指定，一般N指定为CPU核心的1到2倍。接下来就是漫长的编译过程，具体编译时长得看机器的情况了。并且有可能出现各种问题，这个时候不要着急，可以根据错误日志搜索，一般都能找到解决办法。解决之后，在接着运行上边的make 命令就好，会继续在你中断的地方开始编译。
　　最后如果出现：
　　&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;make completed successfully
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;　　那么恭喜你，编译成功了，因为我这里选择的是模拟器的，所以可以通过&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ emulator
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;　　直接启动，刚刚编译的系统。（如果没有下载驱动，可能会卡在启动页面。）&lt;/p&gt;

&lt;p&gt;　　&lt;strong&gt;导入Android Studio&lt;/strong&gt;
　　在编译玩Android源码后，我们继续编译生成Android studio工程:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;soruce build/envsetup.sh
mmm development/tools/idegen/
sudo ./development/tools/idegen/idegen.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;　　其中mmm development/tools/idegen/执行完成后会生成idegen.jar,而sudo ./development/tools/idegen/idegen.sh则会在源码目录下生成IEDA工程配置文件:android.ipr,android.iml及android.iws.这三个文件
　　android.ipr:通常是保存工程相关的设置,比如编译器配置,入口,相关的库等 
　　android.iml:则是主要是描述了modules,比如modules的路径,依赖关系等. 
　　android.iws:则主要是包含了一些个人工作区的设置.&lt;/p&gt;

&lt;p&gt;　　接下来，打开Android Studio,点击File-&amp;gt;Open,选择刚才生成的android.ipr文件即可,然后就是漫长的等待,注意此时是将源码完全导入到AS中了,不出意外,你会觉得AS运行会卡顿。还需要我们忽略掉一些不经常使用的包。
　　在Android Studio导入成功之后，项目结构如下：&lt;/p&gt;

&lt;p&gt;　　 &lt;img src=&quot;http://img.blog.csdn.net/20161122093701276&quot; width=&quot;300&quot; height=&quot;450&quot; /&gt;&lt;/p&gt;

&lt;p&gt;　　红色的表示已经被忽略了，没有导入，那么也可以通过以下方法来对指定的包进行修改是否导入：&lt;/p&gt;

&lt;p&gt;　　&lt;img src=&quot;http://img.blog.csdn.net/20161122093959106&quot; width=&quot;450&quot; height=&quot;400&quot; /&gt;
　　&lt;/p&gt;

&lt;p&gt;　　也可以直接在project Structure中进行修改：&lt;/p&gt;

&lt;p&gt;　　 &lt;img src=&quot;http://img.blog.csdn.net/20161122094352978&quot; width=&quot;400&quot; height=&quot;300&quot; /&gt;&lt;/p&gt;

&lt;p&gt;　　在修改完后，我们可以在android.iml可以看到，我们忽略导入了那些包：&lt;/p&gt;

&lt;p&gt;　　 &lt;img src=&quot;http://img.blog.csdn.net/20161122094529826&quot; width=&quot;400&quot; height=&quot;300&quot; /&gt;&lt;/p&gt;

&lt;p&gt;　　如果熟悉了包的结构，就可以直接在该文件中，完成忽略导入的操作，是最快捷的方式。&lt;/p&gt;

&lt;p&gt;　　这样我们就可以使用Android Studio阅读源码了，在源码阅读过程中可能会出现跳转到SDK对应的方法中的问题，这个时候，需要先配置一下SDK，然后修改项目依赖就可以了。到这儿，就可以越快的撸源码了。Good Luck&lt;/p&gt;
</description>
        <pubDate>Tue, 13 Dec 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000//mac/2016/12/13/mac-aosp.html</link>
        <guid isPermaLink="true">http://localhost:4000//mac/2016/12/13/mac-aosp.html</guid>
        
        <category>AOSP</category>
        
        <category>Mac</category>
        
        
        <category>Mac</category>
        
      </item>
    
      <item>
        <title>TextView 去掉自适应默认的fontpadding</title>
        <description>&lt;p&gt;  最近在项目中使用textview时发现在使用android:layout_height=”wrap_content”这个属性设置后，textview会有默认的padding，也就是fontpadding。这样就会造成textview和其他view中间的间距会比自己的设置的大。那么我们怎么来remove掉这个间距呢？&lt;br /&gt;
　　第一、先试试设置includefontpadding=false ，如果不能达到目的的话，可以按照第二种方法。&lt;br /&gt;
　　第二、实现自定义TextView，只需继承自TextView然后重写onDraw方法就可以了。&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;FontMetricsInt&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fontMetricsInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onDraw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Canvas&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;adjustTopForAscent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//设置是否remove间距，true为remove&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fontMetricsInt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;fontMetricsInt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FontMetricsInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;getPaint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getFontMetricsInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fontMetricsInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;translate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fontMetricsInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fontMetricsInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ascent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onDraw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;  第二种方法一般能达到目的，如果还是不能的话，那只能使用marginTop等于负值来实现了，不过不推荐这种方法。&lt;/p&gt;

</description>
        <pubDate>Fri, 02 Dec 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000//android/2016/12/02/textview-padding.html</link>
        <guid isPermaLink="true">http://localhost:4000//android/2016/12/02/textview-padding.html</guid>
        
        <category>TextView</category>
        
        
        <category>Android</category>
        
      </item>
    
  </channel>
</rss>
